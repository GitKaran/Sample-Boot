/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.generated.tables.CatalogItem;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CatalogItemRecord extends TableRecordImpl<CatalogItemRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = 2116289097;

    /**
     * Setter for <code>public.catalog_item.movie_id</code>.
     */
    public void setMovieId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.catalog_item.movie_id</code>.
     */
    public Integer getMovieId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.catalog_item.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.catalog_item.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.catalog_item.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.catalog_item.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.catalog_item.rating</code>.
     */
    public void setRating(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.catalog_item.rating</code>.
     */
    public Integer getRating() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return CatalogItem.CATALOG_ITEM.MOVIE_ID;
    }

    @Override
    public Field<String> field2() {
        return CatalogItem.CATALOG_ITEM.NAME;
    }

    @Override
    public Field<String> field3() {
        return CatalogItem.CATALOG_ITEM.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return CatalogItem.CATALOG_ITEM.RATING;
    }

    @Override
    public Integer component1() {
        return getMovieId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getRating();
    }

    @Override
    public Integer value1() {
        return getMovieId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getRating();
    }

    @Override
    public CatalogItemRecord value1(Integer value) {
        setMovieId(value);
        return this;
    }

    @Override
    public CatalogItemRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CatalogItemRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CatalogItemRecord value4(Integer value) {
        setRating(value);
        return this;
    }

    @Override
    public CatalogItemRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CatalogItemRecord
     */
    public CatalogItemRecord() {
        super(CatalogItem.CATALOG_ITEM);
    }

    /**
     * Create a detached, initialised CatalogItemRecord
     */
    public CatalogItemRecord(Integer movieId, String name, String description, Integer rating) {
        super(CatalogItem.CATALOG_ITEM);

        set(0, movieId);
        set(1, name);
        set(2, description);
        set(3, rating);
    }
}
