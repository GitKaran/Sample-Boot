/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.generated.tables.Rating;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingRecord extends TableRecordImpl<RatingRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1311202107;

    /**
     * Setter for <code>public.rating.movie_id</code>.
     */
    public void setMovieId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.rating.movie_id</code>.
     */
    public Integer getMovieId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.rating.rating</code>.
     */
    public void setRating(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.rating.rating</code>.
     */
    public Integer getRating() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.rating.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.rating.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Rating.RATING.MOVIE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Rating.RATING.RATING_;
    }

    @Override
    public Field<Integer> field3() {
        return Rating.RATING.USER_ID;
    }

    @Override
    public Integer component1() {
        return getMovieId();
    }

    @Override
    public Integer component2() {
        return getRating();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getMovieId();
    }

    @Override
    public Integer value2() {
        return getRating();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public RatingRecord value1(Integer value) {
        setMovieId(value);
        return this;
    }

    @Override
    public RatingRecord value2(Integer value) {
        setRating(value);
        return this;
    }

    @Override
    public RatingRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public RatingRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RatingRecord
     */
    public RatingRecord() {
        super(Rating.RATING);
    }

    /**
     * Create a detached, initialised RatingRecord
     */
    public RatingRecord(Integer movieId, Integer rating, Integer userId) {
        super(Rating.RATING);

        set(0, movieId);
        set(1, rating);
        set(2, userId);
    }
}
